
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import model.Drug;
import model.Client;
import model.BoughtDrug;

public class Main {

	public static void main(String[] args) {

		/**
		 * Data
		 */

		ArrayList<Client> clientArrayList = new ArrayList<>();
		ArrayList<Drug> drugArrayList = new ArrayList<>();
		
		try {
			clientArrayList.add(new Client("12345678912345","Côme","Meyer","0768980920","11 rue Claude Debussy"));
			//drugArrayList.add(new Drug("1","Aspirine","Maux de Tête",100,1.5f));
			//drugArrayList.add(new Drug("2","Doliprane","OSEF",50,1));
			} catch (Exception e) {
			}
		
		
		
		// Set up Frame
		JFrame mFrame = new JFrame("Pharmacy Management");
		mFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		mFrame.setBounds(0,0,950,600);
		mFrame.getContentPane().setBackground(new Color(0, 198, 159));
		
		Image icon = Toolkit.getDefaultToolkit().getImage("pharmacie.jpg");    
		mFrame.setIconImage(icon);  

		// Client table views
		JPanel clientListPanel = new JPanel();
		clientListPanel.setBackground(new Color(0, 198, 159));
		clientListPanel.setLayout(new BoxLayout(clientListPanel, BoxLayout.Y_AXIS));
		JLabel clientListTitle = new JLabel("Client list");
		clientListTitle.setAlignmentX(java.awt.Component.CENTER_ALIGNMENT);

		DefaultTableModel clientTableModel = new DefaultTableModel();
		clientTableModel.addColumn("Social Number");
		clientTableModel.addColumn("First Name");
		clientTableModel.addColumn("Last Name");
		JTable clientTable = new JTable(clientTableModel);
		clientTable.getTableHeader().setBackground(new Color(250, 255, 150));
		clientTable.setOpaque(false);
		clientTable.setFillsViewportHeight(true);
		clientTable.setBackground(new Color(250, 255, 230));
		
		JScrollPane clientPanel = new JScrollPane(clientTable);
		clientListPanel.add(clientListTitle);
		clientListPanel.add(clientPanel);	
		mFrame.getContentPane().add(BorderLayout.LINE_START, clientListPanel);


		//drug table view
		JPanel drugListPanel = new JPanel();
		drugListPanel.setBackground(new Color(0, 198, 159));
		drugListPanel.setLayout(new BoxLayout(drugListPanel, BoxLayout.Y_AXIS));
		JLabel drugListTitle = new JLabel("Drug List");
		drugListTitle.setAlignmentX(java.awt.Component.CENTER_ALIGNMENT);

		DefaultTableModel drugTableModel = new DefaultTableModel();
		drugTableModel.addColumn("Drug Ref");
		drugTableModel.addColumn("Drug Label");
		drugTableModel.addColumn("Drug Quantity");
		drugTableModel.addColumn("Drug Price");
		JTable drugTable = new JTable(drugTableModel);
		drugTable.getTableHeader().setBackground(new Color(250, 255, 150));
		drugTable.setOpaque(false);
		drugTable.setFillsViewportHeight(true);
		drugTable.setBackground(new Color(250, 255, 230));
		
		JScrollPane drugPanel = new JScrollPane(drugTable);
		drugListPanel.add(drugListTitle);
		drugListPanel.add(drugPanel);
		mFrame.getContentPane().add(BorderLayout.AFTER_LINE_ENDS, drugListPanel);


		//Creating the MenuBar and adding components
		JMenuBar menuBar = new JMenuBar();
		menuBar.setBackground(new Color(0, 180, 130));
		JMenu menu1 = new JMenu("Add");
		JMenu menu2 = new JMenu("Search");
		JMenu menu3 = new JMenu("Manage");
		
		menu1.setBackground(new Color(0, 180, 130));
		menu2.setBackground(new Color(0, 180, 130));
		menu3.setBackground(new Color(0, 180, 130));
		
		JMenuItem menuItem11 = new JMenuItem("Add Client");
		JMenuItem menuItem12 = new JMenuItem("Add Drug");
		JMenuItem menuItem21 = new JMenuItem("Search Client");
		JMenuItem menuItem22 = new JMenuItem("Search Drug");
		JMenuItem menuItem31 = new JMenuItem("Manage Client");
		JMenuItem menuItem32 = new JMenuItem("Manage Drug");

		menuItem11.setBackground(new Color(0, 180, 130));
		menuItem21.setBackground(new Color(0, 180, 130));
		menuItem31.setBackground(new Color(0, 180, 130));
		menuItem12.setBackground(new Color(0, 180, 130));
		menuItem22.setBackground(new Color(0, 180, 130));
		menuItem32.setBackground(new Color(0, 180, 130));
		
		menuItem11.setBackground(new Color(0, 180, 130));
		
		menuBar.add(menu1);
		menuBar.add(menu2);
		menuBar.add(menu3);
		menu1.add(menuItem11);
		menu1.add(menuItem12);
		menu2.add(menuItem21);
		menu2.add(menuItem22);
		menu3.add(menuItem31);
		menu3.add(menuItem32);

		// Add Drug show dialog button
		menuItem11.addActionListener(new ActionListener() {	

			//creating drug button
			public void actionPerformed(ActionEvent e) {

				JPanel addClientDialogPanel = new JPanel();
				addClientDialogPanel.setLayout(new BoxLayout(addClientDialogPanel, BoxLayout.Y_AXIS));

				JTextField socialField = new JTextField();
				JTextField fnameField = new JTextField();
				JTextField lnameField = new JTextField();
				JTextField phoneField = new JTextField();
				JTextField addressField = new JTextField();						

				addClientDialogPanel.add(new JLabel("Client social security number:"));
				addClientDialogPanel.add(socialField);
				addClientDialogPanel.add(Box.createHorizontalStrut(15));

				addClientDialogPanel.add(new JLabel("Client first name:"));
				addClientDialogPanel.add(fnameField);
				addClientDialogPanel.add(Box.createHorizontalStrut(15));

				addClientDialogPanel.add(new JLabel("Client last name:"));
				addClientDialogPanel.add(lnameField);
				addClientDialogPanel.add(Box.createHorizontalStrut(15));

				addClientDialogPanel.add(new JLabel("Client phone number:"));
				addClientDialogPanel.add(phoneField);
				addClientDialogPanel.add(Box.createHorizontalStrut(15));

				addClientDialogPanel.add(new JLabel("Client address:"));
				addClientDialogPanel.add(addressField);
				addClientDialogPanel.add(Box.createHorizontalStrut(15));
				
//				if(!drugArrayList.isEmpty()) {
//					addClientDialogPanel.add(new JLabel("Drug(s) to add:"));
//					for (Drug d : drugArrayList) {
//						addClientDialogPanel.add(new JCheckBox(d.getWording()));
//					}
//				}


				int result = JOptionPane.showConfirmDialog(mFrame, addClientDialogPanel, 
						"Provide Client info", JOptionPane.OK_CANCEL_OPTION);

				if (result == JOptionPane.OK_OPTION) {

					//creating confirm panel
					JOptionPane addClientConfirm = new JOptionPane();
					int confirmClient = addClientConfirm.showConfirmDialog(null,"Do you want to confirm?","Approval request", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
					//if YES clicked
					if (confirmClient == 0) {
						
						try {
							Client newClient = new Client(socialField.getText(), fnameField.getText(), lnameField.getText(), phoneField.getText(), 
									addressField.getText());
							clientArrayList.add(newClient);
							clientTableModel.addRow(new Object[] {newClient.socialNb, newClient.firstName, newClient.lastName});
							
						} catch (Exception e1) {
							new JOptionPane().showMessageDialog(null, e1.getMessage(), "Error, Social Security Number too short", JOptionPane.ERROR_MESSAGE);
						}
					}

					//if NO clicked
					else if(confirmClient == 1){
						addClientConfirm.getRootFrame().dispose();
					}
					//if CLOSED clicked
					else {
						addClientConfirm.getRootFrame().dispose();
					}

				}
			}
		});


		menuItem12.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) {


				JPanel addDrugDialogPanel = new JPanel();
				addDrugDialogPanel.setLayout( new BoxLayout(addDrugDialogPanel, BoxLayout.Y_AXIS));

				JTextField refField = new JTextField();
				JTextField wordingField = new JTextField();
				JTextField descriptField = new JTextField();
				JTextField quantityField = new JTextField();
				JTextField priceField = new JTextField();

				addDrugDialogPanel.add(new JLabel("Reference of the Drug"));
				addDrugDialogPanel.add(refField);
				addDrugDialogPanel.add(Box.createHorizontalStrut(15));

				addDrugDialogPanel.add(new JLabel("Label of the Drug"));
				addDrugDialogPanel.add(wordingField);
				addDrugDialogPanel.add(Box.createHorizontalStrut(15));

				addDrugDialogPanel.add(new JLabel("Description of the Drug"));
				addDrugDialogPanel.add(descriptField);
				addDrugDialogPanel.add(Box.createHorizontalStrut(15));

				addDrugDialogPanel.add(new JLabel("Quantity of the Drug in stock"));
				addDrugDialogPanel.add(quantityField);
				addDrugDialogPanel.add(Box.createHorizontalStrut(15));

				addDrugDialogPanel.add(new JLabel("Price of the Drug"));
				addDrugDialogPanel.add(priceField);
				addDrugDialogPanel.add(Box.createHorizontalStrut(15));


				int result = JOptionPane.showConfirmDialog(mFrame, addDrugDialogPanel, "Provide Drug info", JOptionPane.OK_CANCEL_OPTION);

				if (result == JOptionPane.OK_OPTION) {

					JOptionPane addDrugConfirm = new JOptionPane();
					int confirmDrug = addDrugConfirm.showConfirmDialog(null, "Do you want to Confirm","Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

					if (confirmDrug == 0) {
						Drug newDrug = new Drug(refField.getText(), wordingField.getText(), descriptField.getText(), Integer.parseInt(quantityField.getText()),
								Float.parseFloat(priceField.getText()));

						drugArrayList.add(newDrug);
						drugTableModel.addRow(new Object[] {newDrug.ref, newDrug.wording, newDrug.quantity, newDrug.price});

					}

					else if (confirmDrug == 1) {
						addDrugConfirm.getRootFrame().dispose();
					}

					else {
						addDrugConfirm.getRootFrame().dispose();
					}

				}

			}

		});

		menuItem21.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// Search client button action
				JPanel searchClientDialogPanel = new JPanel();
				searchClientDialogPanel.setLayout( new BoxLayout(searchClientDialogPanel, BoxLayout.Y_AXIS));

				JTextField searchClientField = new JTextField (20);

				searchClientDialogPanel.add(new JLabel("Enter the social number of the Client "));
				searchClientDialogPanel.add(searchClientField);

				int result = JOptionPane.showConfirmDialog(mFrame, searchClientDialogPanel, "Provide client info", JOptionPane.OK_CANCEL_OPTION);

				if (result == JOptionPane.OK_OPTION) {

					JOptionPane searchClientConfirm = new JOptionPane();
					int confirmSearchClient = searchClientConfirm.showConfirmDialog(null, "Do you want to Confirm","Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

					if (confirmSearchClient == 0) {
						for (Client c : clientArrayList) {

							if (c.socialNb.equals(searchClientField.getText())) {

								JFrame clientInfo = new JFrame();
								JPanel clientInfoPanel = new JPanel();
								
								JOptionPane.showMessageDialog(clientInfo,c.clientDisplayInfos() + c.buildClientDrugPanel(c));
							}
							
//							else {
//								JOptionPane warningNotExist = new JOptionPane();
//								warningNotExist.showMessageDialog(null,"The Client selected does NOT exist","Warning!", JOptionPane.WARNING_MESSAGE);
//							}
						}
					}

					else if (confirmSearchClient == 1) {
						searchClientConfirm.getRootFrame().dispose();
					}

					else {
						searchClientConfirm.getRootFrame().dispose();
					}

				}
			}
		});


		menuItem22.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// Search client button action
				JPanel searchDrugDialogPanel = new JPanel();
				searchDrugDialogPanel.setLayout( new BoxLayout(searchDrugDialogPanel, BoxLayout.Y_AXIS));

				JTextField searchDrugField = new JTextField (20);

				searchDrugDialogPanel.add(new JLabel("Enter the reference of the drug:  "));
				searchDrugDialogPanel.add(searchDrugField);

				int result = JOptionPane.showConfirmDialog(mFrame, searchDrugDialogPanel, "Provide Drug info", JOptionPane.OK_CANCEL_OPTION);

				if (result == JOptionPane.OK_OPTION) {

					JOptionPane searchDrugConfirm = new JOptionPane();
					int confirmSearchDrug = searchDrugConfirm.showConfirmDialog(null, "Do you want to Confirm","Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

					if (confirmSearchDrug == 0) {
						for (Drug d : drugArrayList) {

							if (d.ref.equals(searchDrugField.getText())) {
								JFrame drugInfo = new JFrame();
								JOptionPane.showMessageDialog(drugInfo,d.drugDisplayInfos());
							}
							
//							else {
//								JOptionPane warningNotExist = new JOptionPane();
//								warningNotExist.showMessageDialog(null,"The Drug selected does NOT exist","Warning!", JOptionPane.WARNING_MESSAGE);
//							}
						}
					}

					else if (confirmSearchDrug == 1) {
						searchDrugConfirm.getRootFrame().dispose();
					}

					else {
						searchDrugConfirm.getRootFrame().dispose();
					}

				}
			}
		});
		
		menuItem31.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// Search client button action
				JPanel manageClientDialogPanel = new JPanel();
				manageClientDialogPanel.setLayout( new BoxLayout(manageClientDialogPanel, BoxLayout.Y_AXIS));
				
				JTextField selectClient = new JTextField();
				JTextField selectDrug = new JTextField();
				JTextField selectQuantity = new JTextField();

				manageClientDialogPanel.add(new JLabel("Select the Social Number of the Client"));
				manageClientDialogPanel.add(selectClient);
				manageClientDialogPanel.add(Box.createHorizontalStrut(15));

				manageClientDialogPanel.add(new JLabel("Select the Reference of the Drug"));
				manageClientDialogPanel.add(selectDrug);
				manageClientDialogPanel.add(Box.createHorizontalStrut(15));

				manageClientDialogPanel.add(new JLabel("Quantity of Drug"));
				manageClientDialogPanel.add(selectQuantity);
				manageClientDialogPanel.add(Box.createHorizontalStrut(15));
				
				int result = JOptionPane.showConfirmDialog(mFrame, manageClientDialogPanel, "Manage Client Basket", JOptionPane.OK_CANCEL_OPTION);

				if (result == JOptionPane.OK_OPTION) {

					JOptionPane manageClientConfirm = new JOptionPane();
					int confirmSearchDrug = manageClientConfirm.showConfirmDialog(null, "Do you want to Confirm","Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

					if (confirmSearchDrug == 0) {
						for (Client c : clientArrayList) {

							if (c.socialNb.equals(selectClient.getText())) {
								
								int indexRow = -1;
								
								for (Drug d : drugArrayList) {
									
									indexRow++;
									
									if(d.getRef().equals(selectDrug.getText()) && d.getQuantity() > 0 && (d.getQuantity() - Integer.parseInt(selectQuantity.getText())>=0)) {

										int quantityBought = Integer.parseInt(selectQuantity.getText());
										int finalQuantity = d.getQuantity() - quantityBought;
										float purchasePrice = quantityBought*d.getPrice();
										
										d.setQuantity(finalQuantity);
										c.getMedicineList().add(new BoughtDrug(d.getRef(),d.getWording(),d.getDescript() ,quantityBought ,d.getPrice()));
										c.addTotalPrice(c, purchasePrice);
										JOptionPane purchasePane = new JOptionPane();
										purchasePane.showMessageDialog(null,"You bought: " +quantityBought+" "+ d.getWording()
										+" for " +purchasePrice+ " €","Information", JOptionPane.INFORMATION_MESSAGE);

										drugTableModel.setValueAt(finalQuantity,indexRow, 2);
									}
									
									else if((d.getQuantity() - Integer.parseInt(selectQuantity.getText())<0)) {
										JOptionPane warningQuantity = new JOptionPane();
										warningQuantity.showMessageDialog(null,"The stock of the drug chosen too low","Warning!", JOptionPane.WARNING_MESSAGE);

									}
//									else if(!drugArrayList.contains(d)) {
//										JOptionPane warningNotExist = new JOptionPane();
//										warningNotExist.showMessageDialog(null,"The Drug selected does NOT exist","Warning!", JOptionPane.WARNING_MESSAGE);
//									}
								}
							}
//							else {
//								JOptionPane warningNotExist = new JOptionPane();
//								warningNotExist.showMessageDialog(null,"The Client selected does NOT exist","Warning!", JOptionPane.WARNING_MESSAGE);
//							}
						}
						mFrame.revalidate();
						mFrame.repaint();
					}
				}
			}
		});

		
		menuItem32.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// Search client button action
				JPanel manageDrugDialogPanel = new JPanel();
				manageDrugDialogPanel.setLayout( new BoxLayout(manageDrugDialogPanel, BoxLayout.Y_AXIS));

				JTextField selectDrug = new JTextField();
				JTextField selectQuantity = new JTextField();
				
				manageDrugDialogPanel.add(new JLabel("Select the Reference of the Drug"));
				manageDrugDialogPanel.add(selectDrug);
				manageDrugDialogPanel.add(Box.createHorizontalStrut(15));

				manageDrugDialogPanel.add(new JLabel("Quantity of Drug to Add"));
				manageDrugDialogPanel.add(selectQuantity);
				manageDrugDialogPanel.add(Box.createHorizontalStrut(15));

				int result = JOptionPane.showConfirmDialog(mFrame, manageDrugDialogPanel, "Provide Drug info", JOptionPane.OK_CANCEL_OPTION);

				if (result == JOptionPane.OK_OPTION) {

					JOptionPane manageDrugConfirm = new JOptionPane();
					int confirmManageDrug = manageDrugConfirm.showConfirmDialog(null, "Do you want to Confirm","Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

					if (confirmManageDrug == 0) {
						
						int indexRow = -1;
						
						for (Drug d : drugArrayList) {
							
							indexRow++;
							
							if (d.ref.equals(selectDrug.getText())) {
								int quantityToInt = d.getQuantity()+ Integer.parseInt(selectQuantity.getText());
								d.setQuantity(quantityToInt);
								drugTableModel.setValueAt(quantityToInt, indexRow, 2);
							}
//							else {
//								JOptionPane warningNotExist = new JOptionPane();
//								warningNotExist.showMessageDialog(null,"The Drug selected does NOT exist","Warning!", JOptionPane.WARNING_MESSAGE);
//							}
						}
						mFrame.revalidate();
						mFrame.repaint();
					}

					else if (confirmManageDrug == 1) {
						manageDrugConfirm.getRootFrame().dispose();
					}

					else {
						manageDrugConfirm.getRootFrame().dispose();
					}

				}
			}
		});




		//Adding elements to the main frame
		mFrame.getContentPane().add(BorderLayout.PAGE_START, menuBar);

		// Show Frame
		mFrame.setVisible(true);

	}
	/*
	 * Functions
	 */
	
	//	public static void buildClientDrugPanel(ArrayList<Drug> drugList, String socialToSearch, JPanel drugPanel) {
	//
	//		JPanel clientDrugPanel = new JPanel();
	//		clientDrugPanel.setLayout(new BoxLayout(clientDrugPanel, BoxLayout.Y_AXIS));
	//		clientDrugPanel.add(new JLabel("Drug List :", SwingConstants.CENTER));
	//		
	//		if (!drugList.isEmpty()) {
	//		for(Drug d : drugList) {
	//			clientDrugPanel.add(new JLabel(d.getWording() +": "+ d.getQuantity()+" units"));
	//		}
	//	}
	//	drugPanel.add(clientDrugPanel);	
	//	drugPanel.repaint();
	//}
}
